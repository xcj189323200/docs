export const siteData = {
  "title": "前端FE技术文档",
  "description": "Just playing around",
  "base": "/",
  "pages": [
    {
      "key": "v-3b700d3ac69f7",
      "path": "/",
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/logo.png",
        "heroText": "前端FE博客",
        "tagline": "勾正前端技术文档",
        "actionText": "进入查看 →",
        "actionLink": "/sources/web/vue/vuex",
        "features": [
          {
            "title": "学习为主",
            "details": "本文档将带你学习主流前端技术"
          },
          {
            "title": "技术栈学习",
            "details": "Vue TypeScript Node等"
          },
          {
            "title": "座右铭",
            "details": "书山有路勤为径，学海无涯苦作舟"
          }
        ]
      }
    },
    {
      "key": "v-638e4d856c9b6",
      "path": "/sources/html/about.html"
    },
    {
      "key": "v-e7eb517e2a7b4",
      "path": "/sources/",
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/logo.png",
        "heroText": "前端FE博客",
        "tagline": "勾正前端技术文档",
        "actionText": "进入查看 →",
        "actionLink": "/sources/web/vue/vuex",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ]
      }
    },
    {
      "key": "v-e20a38ccdecc7",
      "path": "/sources/rules/rules.html",
      "title": "声明：",
      "headers": [
        {
          "level": 2,
          "title": "2.1 域名（domain）",
          "slug": "_2-1-域名（domain）"
        },
        {
          "level": 2,
          "title": "2.2 项目名（namespace）",
          "slug": "_2-2-项目名（namespace）"
        },
        {
          "level": 2,
          "title": "2.3 版本（version）",
          "slug": "_2-3-版本（version）"
        },
        {
          "level": 2,
          "title": "2.4 资源（resource）",
          "slug": "_2-4-资源（resource）"
        },
        {
          "level": 2,
          "title": "3.1 URL约束（不含参数部分）",
          "slug": "_3-1-url约束（不含参数部分）"
        },
        {
          "level": 2,
          "title": "3.2 参数规范",
          "slug": "_3-2-参数规范"
        },
        {
          "level": 2,
          "title": "3.3 项目根路径规范",
          "slug": "_3-3-项目根路径规范"
        },
        {
          "level": 2,
          "title": "3.4 请求方法规范",
          "slug": "_3-4-请求方法规范"
        }
      ]
    },
    {
      "key": "v-a171e94921046",
      "path": "/sources/web/node/express.html",
      "title": "express",
      "headers": [
        {
          "level": 2,
          "title": "express 是什么",
          "slug": "express-是什么"
        },
        {
          "level": 2,
          "title": "express 中间件",
          "slug": "express-中间件"
        },
        {
          "level": 2,
          "title": "express 运行原理",
          "slug": "express-运行原理"
        },
        {
          "level": 2,
          "title": "use() 方法",
          "slug": "use-方法"
        },
        {
          "level": 2,
          "title": "all 方法和 HTTP 动词方法",
          "slug": "all-方法和-http-动词方法"
        },
        {
          "level": 3,
          "title": "set 方法",
          "slug": "set-方法"
        },
        {
          "level": 3,
          "title": "response 对象",
          "slug": "response-对象"
        },
        {
          "level": 3,
          "title": "requst 对象",
          "slug": "requst-对象"
        },
        {
          "level": 2,
          "title": "基本用法",
          "slug": "基本用法"
        },
        {
          "level": 2,
          "title": "router 中间件",
          "slug": "router-中间件"
        },
        {
          "level": 2,
          "title": "对路径参数的处理",
          "slug": "对路径参数的处理"
        }
      ]
    },
    {
      "key": "v-d324ed20be3a6",
      "path": "/sources/web/typescript/ts-class.html",
      "title": "类",
      "headers": [
        {
          "level": 2,
          "title": "类的概念",
          "slug": "类的概念"
        },
        {
          "level": 2,
          "title": "ES6 中类的用法",
          "slug": "es6-中类的用法"
        },
        {
          "level": 3,
          "title": "属性和方法",
          "slug": "属性和方法"
        },
        {
          "level": 3,
          "title": "类的继承",
          "slug": "类的继承"
        },
        {
          "level": 3,
          "title": "存取器",
          "slug": "存取器"
        },
        {
          "level": 3,
          "title": "静态方法",
          "slug": "静态方法"
        },
        {
          "level": 2,
          "title": "ES7 中类的用法",
          "slug": "es7-中类的用法"
        },
        {
          "level": 3,
          "title": "实例属性",
          "slug": "实例属性"
        },
        {
          "level": 3,
          "title": "静态属性",
          "slug": "静态属性"
        },
        {
          "level": 2,
          "title": "TypeScript 中类的用法",
          "slug": "typescript-中类的用法"
        },
        {
          "level": 3,
          "title": "public private 和 protected",
          "slug": "public-private-和-protected"
        },
        {
          "level": 2,
          "title": "抽象类",
          "slug": "抽象类"
        },
        {
          "level": 2,
          "title": "类的类型",
          "slug": "类的类型"
        }
      ]
    },
    {
      "key": "v-632ee222f7bea",
      "path": "/sources/web/typescript/ts-declare.html",
      "title": "声明文件",
      "headers": [
        {
          "level": 2,
          "title": "什么是声明语句",
          "slug": "什么是声明语句"
        },
        {
          "level": 2,
          "title": "什么是声明文件",
          "slug": "什么是声明文件"
        },
        {
          "level": 2,
          "title": "第三方声明文件",
          "slug": "第三方声明文件"
        },
        {
          "level": 2,
          "title": "书写声明文件",
          "slug": "书写声明文件"
        },
        {
          "level": 3,
          "title": "全局变量",
          "slug": "全局变量"
        },
        {
          "level": 3,
          "title": "declare function",
          "slug": "declare-function"
        },
        {
          "level": 3,
          "title": "declare class",
          "slug": "declare-class"
        },
        {
          "level": 3,
          "title": "declare enum",
          "slug": "declare-enum"
        },
        {
          "level": 3,
          "title": "declare namespace",
          "slug": "declare-namespace"
        },
        {
          "level": 3,
          "title": "嵌套的命名空间",
          "slug": "嵌套的命名空间"
        },
        {
          "level": 3,
          "title": "防止命名冲突",
          "slug": "防止命名冲突"
        },
        {
          "level": 3,
          "title": "声明合并",
          "slug": "声明合并"
        },
        {
          "level": 2,
          "title": "npm 包",
          "slug": "npm-包"
        },
        {
          "level": 3,
          "title": "export",
          "slug": "export"
        },
        {
          "level": 3,
          "title": "混用 declare 和 export",
          "slug": "混用-declare-和-export"
        },
        {
          "level": 3,
          "title": "export default",
          "slug": "export-default"
        },
        {
          "level": 3,
          "title": "export =",
          "slug": "export-2"
        },
        {
          "level": 2,
          "title": "UMD 库",
          "slug": "umd-库"
        },
        {
          "level": 3,
          "title": "export as namespace",
          "slug": "export-as-namespace"
        },
        {
          "level": 2,
          "title": "在 npm 包或 UMD 库中扩展全局变量",
          "slug": "在-npm-包或-umd-库中扩展全局变量"
        },
        {
          "level": 3,
          "title": "declare global",
          "slug": "declare-global"
        },
        {
          "level": 2,
          "title": "模块插件",
          "slug": "模块插件"
        },
        {
          "level": 3,
          "title": "declare module",
          "slug": "declare-module"
        },
        {
          "level": 2,
          "title": "声明文件中的依赖",
          "slug": "声明文件中的依赖"
        },
        {
          "level": 2,
          "title": "三斜线指令",
          "slug": "三斜线指令"
        },
        {
          "level": 3,
          "title": "书写一个全局变量的声明文件",
          "slug": "书写一个全局变量的声明文件"
        },
        {
          "level": 3,
          "title": "依赖一个全局变量的声明文件",
          "slug": "依赖一个全局变量的声明文件"
        },
        {
          "level": 3,
          "title": "拆分声明文件",
          "slug": "拆分声明文件"
        },
        {
          "level": 3,
          "title": "其他三斜线指令",
          "slug": "其他三斜线指令"
        },
        {
          "level": 2,
          "title": "自动生成声明文件",
          "slug": "自动生成声明文件"
        },
        {
          "level": 2,
          "title": "发布声明文件",
          "slug": "发布声明文件"
        },
        {
          "level": 3,
          "title": "将声明文件和源码放在一起",
          "slug": "将声明文件和源码放在一起"
        },
        {
          "level": 3,
          "title": "将声明文件发布到@types 下",
          "slug": "将声明文件发布到-types-下"
        }
      ]
    },
    {
      "key": "v-da2aced441339",
      "path": "/sources/web/typescript/ts-enum.html",
      "title": "枚举",
      "headers": [
        {
          "level": 2,
          "title": "自动赋值",
          "slug": "自动赋值"
        },
        {
          "level": 2,
          "title": "手动赋值",
          "slug": "手动赋值"
        },
        {
          "level": 2,
          "title": "常数项和计算所得项",
          "slug": "常数项和计算所得项"
        },
        {
          "level": 2,
          "title": "常数枚举",
          "slug": "常数枚举"
        },
        {
          "level": 2,
          "title": "外部枚举",
          "slug": "外部枚举"
        },
        {
          "level": 2,
          "title": "反向映射",
          "slug": "反向映射"
        }
      ]
    },
    {
      "key": "v-7aaa7f875c1f8",
      "path": "/sources/web/typescript/ts-interface.html",
      "title": "接口",
      "headers": [
        {
          "level": 2,
          "title": "什么是接口",
          "slug": "什么是接口"
        },
        {
          "level": 2,
          "title": "可选属性",
          "slug": "可选属性"
        },
        {
          "level": 2,
          "title": "任意属性",
          "slug": "任意属性"
        },
        {
          "level": 2,
          "title": "只读属性",
          "slug": "只读属性"
        },
        {
          "level": 2,
          "title": "类与接口定义",
          "slug": "类与接口定义"
        },
        {
          "level": 2,
          "title": "接口继承接口",
          "slug": "接口继承接口"
        },
        {
          "level": 2,
          "title": "接口继承类",
          "slug": "接口继承类"
        },
        {
          "level": 2,
          "title": "混合类型",
          "slug": "混合类型"
        }
      ]
    },
    {
      "key": "v-61a87b8251351",
      "path": "/sources/web/typescript/ts-introduce.html",
      "title": "简介",
      "headers": [
        {
          "level": 2,
          "title": "什么是 TypeScript",
          "slug": "什么是-typescript"
        },
        {
          "level": 2,
          "title": "为什么选择 TypeScript",
          "slug": "为什么选择-typescript"
        },
        {
          "level": 3,
          "title": "TypeScript 增加了代码的可读性和可维护性",
          "slug": "typescript-增加了代码的可读性和可维护性"
        },
        {
          "level": 3,
          "title": "TypeScript 非常包容",
          "slug": "typescript-非常包容"
        },
        {
          "level": 2,
          "title": "TypeScript 的缺点",
          "slug": "typescript-的缺点"
        }
      ]
    },
    {
      "key": "v-440eb4be197a4",
      "path": "/sources/web/typescript/ts-types.html",
      "title": "类型",
      "headers": [
        {
          "level": 2,
          "title": "布尔类型",
          "slug": "布尔类型"
        },
        {
          "level": 2,
          "title": "数值",
          "slug": "数值"
        },
        {
          "level": 2,
          "title": "字符串",
          "slug": "字符串"
        },
        {
          "level": 2,
          "title": "Null 和 Undefined",
          "slug": "null-和-undefined"
        },
        {
          "level": 2,
          "title": "数组",
          "slug": "数组"
        },
        {
          "level": 3,
          "title": "最简单的方法是使用「类型 + 方括号」来表示数组：",
          "slug": "最简单的方法是使用「类型-方括号」来表示数组："
        },
        {
          "level": 3,
          "title": "也可以使用数组泛型Array<elemType> 来表示数组:",
          "slug": "也可以使用数组泛型array-elemtype-来表示数组"
        },
        {
          "level": 3,
          "title": "用接口表示数组",
          "slug": "用接口表示数组"
        },
        {
          "level": 3,
          "title": "类数组!",
          "slug": "类数组"
        },
        {
          "level": 2,
          "title": "对象",
          "slug": "对象"
        },
        {
          "level": 2,
          "title": "任意类型",
          "slug": "任意类型"
        },
        {
          "level": 2,
          "title": "联合类型",
          "slug": "联合类型"
        },
        {
          "level": 3,
          "title": "基本用法",
          "slug": "基本用法"
        },
        {
          "level": 3,
          "title": "访问联合类型的属性或方法",
          "slug": "访问联合类型的属性或方法"
        },
        {
          "level": 3,
          "title": "字符串字面量类型",
          "slug": "字符串字面量类型"
        },
        {
          "level": 2,
          "title": "类型推论",
          "slug": "类型推论"
        },
        {
          "level": 3,
          "title": "什么是类型推论",
          "slug": "什么是类型推论"
        },
        {
          "level": 2,
          "title": "类型断言",
          "slug": "类型断言"
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法"
        },
        {
          "level": 3,
          "title": "例子：将一个联合类型的变量指定为一个更加具体的类型",
          "slug": "例子：将一个联合类型的变量指定为一个更加具体的类型"
        },
        {
          "level": 2,
          "title": "函数的类型",
          "slug": "函数的类型"
        },
        {
          "level": 3,
          "title": "函数声明",
          "slug": "函数声明"
        },
        {
          "level": 3,
          "title": "函数表达式",
          "slug": "函数表达式"
        },
        {
          "level": 3,
          "title": "用接口定义函数的形状",
          "slug": "用接口定义函数的形状"
        },
        {
          "level": 3,
          "title": "可选参数",
          "slug": "可选参数"
        },
        {
          "level": 3,
          "title": "剩余参数",
          "slug": "剩余参数"
        },
        {
          "level": 3,
          "title": "重载",
          "slug": "重载"
        },
        {
          "level": 2,
          "title": "类型别名",
          "slug": "类型别名"
        }
      ]
    },
    {
      "key": "v-8300134d4d9d6",
      "path": "/sources/web/typescript/ts-vue.html",
      "title": "在 vue 中开发"
    },
    {
      "key": "v-8ff16091ff498",
      "path": "/sources/web/vue/vuex.html",
      "title": "vuex",
      "headers": [
        {
          "level": 2,
          "title": "vuex 是什么",
          "slug": "vuex-是什么"
        },
        {
          "level": 3,
          "title": "什么是“状态管理模式”？",
          "slug": "什么是“状态管理模式”？"
        },
        {
          "level": 2,
          "title": "为什么使用 vuex",
          "slug": "为什么使用-vuex"
        },
        {
          "level": 2,
          "title": "VUEX 流程",
          "slug": "vuex-流程"
        },
        {
          "level": 2,
          "title": "VUEX 核心概念",
          "slug": "vuex-核心概念"
        },
        {
          "level": 3,
          "title": "State",
          "slug": "state"
        },
        {
          "level": 3,
          "title": "Action",
          "slug": "action"
        },
        {
          "level": 3,
          "title": "Mutation",
          "slug": "mutation"
        },
        {
          "level": 3,
          "title": "Getter",
          "slug": "getter"
        },
        {
          "level": 2,
          "title": "插件",
          "slug": "插件"
        },
        {
          "level": 3,
          "title": "在插件内提交 Mutation",
          "slug": "在插件内提交-mutation"
        },
        {
          "level": 3,
          "title": "内置 Logger 插件",
          "slug": "内置-logger-插件"
        }
      ]
    }
  ],
  "themeConfig": {
    "repo": "https://github.com/xcj189323200/docs",
    "docsDir": "sources",
    "docsBranch": "master",
    "astUpdated": "Last Updated",
    "nav": [
      {
        "text": "前端",
        "items": [
          {
            "text": "vue",
            "link": "/sources/web/vue/vuex"
          },
          {
            "text": "typescript",
            "link": "/sources/web/typescript/ts-introduce"
          }
        ]
      },
      {
        "text": "后端",
        "items": [
          {
            "text": "node",
            "link": "/sources/web/node/express"
          }
        ]
      },
      {
        "text": "规范",
        "link": "/sources/rules/rules"
      },
      {
        "text": "关于我",
        "link": "/sources/html/about"
      }
    ],
    "sidebar": {
      "/sources/web/typescript/": [
        {
          "title": "typeScript",
          "collapsable": true,
          "children": [
            "/sources/web/typescript/ts-introduce",
            "/sources/web/typescript/ts-types",
            "/sources/web/typescript/ts-interface",
            "/sources/web/typescript/ts-declare",
            "/sources/web/typescript/ts-enum",
            "/sources/web/typescript/ts-class",
            "/sources/web/typescript/ts-vue"
          ]
        }
      ],
      "/sources/web/vue/": [
        {
          "title": "vue",
          "collapsable": true,
          "children": [
            "/sources/web/vue/vuex"
          ]
        }
      ],
      "/sources/web/node/": [
        {
          "title": "NODE",
          "collapsable": true,
          "children": [
            "/sources/web/node/express"
          ]
        }
      ]
    }
  }
}