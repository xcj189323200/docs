export const siteData = {
  "title": "前端FE技术文档",
  "description": "Just playing around",
  "base": "/",
  "pages": [
    {
      "key": "v-913b8085677fe",
      "path": "/",
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/logo.png",
        "heroText": "前端FE博客",
        "tagline": "勾正前端技术文档",
        "actionText": "进入查看 →",
        "actionLink": "/src/web/vue/vuex",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ]
      }
    },
    {
      "key": "v-fe3131da397ef",
      "path": "/src/html/about.html"
    },
    {
      "key": "v-f7229930503fa",
      "path": "/src/rules/rules.html",
      "title": "声明：",
      "headers": [
        {
          "level": 2,
          "title": "2.1 域名（domain）",
          "slug": "_2-1-域名（domain）"
        },
        {
          "level": 2,
          "title": "2.2 项目名（namespace）",
          "slug": "_2-2-项目名（namespace）"
        },
        {
          "level": 2,
          "title": "2.3 版本（version）",
          "slug": "_2-3-版本（version）"
        },
        {
          "level": 2,
          "title": "2.4 资源（resource）",
          "slug": "_2-4-资源（resource）"
        },
        {
          "level": 2,
          "title": "3.1 URL约束（不含参数部分）",
          "slug": "_3-1-url约束（不含参数部分）"
        },
        {
          "level": 2,
          "title": "3.2 参数规范",
          "slug": "_3-2-参数规范"
        },
        {
          "level": 2,
          "title": "3.3 项目根路径规范",
          "slug": "_3-3-项目根路径规范"
        },
        {
          "level": 2,
          "title": "3.4 请求方法规范",
          "slug": "_3-4-请求方法规范"
        }
      ]
    },
    {
      "key": "v-2fa9484d75c82",
      "path": "/src/web/node/express.html",
      "title": "express",
      "headers": [
        {
          "level": 2,
          "title": "express 是什么",
          "slug": "express-是什么"
        },
        {
          "level": 2,
          "title": "express 中间件",
          "slug": "express-中间件"
        },
        {
          "level": 2,
          "title": "express 运行原理",
          "slug": "express-运行原理"
        },
        {
          "level": 2,
          "title": "use() 方法",
          "slug": "use-方法"
        },
        {
          "level": 2,
          "title": "all 方法和 HTTP 动词方法",
          "slug": "all-方法和-http-动词方法"
        },
        {
          "level": 3,
          "title": "set 方法",
          "slug": "set-方法"
        },
        {
          "level": 3,
          "title": "response 对象",
          "slug": "response-对象"
        },
        {
          "level": 3,
          "title": "requst 对象",
          "slug": "requst-对象"
        },
        {
          "level": 2,
          "title": "基本用法",
          "slug": "基本用法"
        },
        {
          "level": 2,
          "title": "router 中间件",
          "slug": "router-中间件"
        },
        {
          "level": 2,
          "title": "对路径参数的处理",
          "slug": "对路径参数的处理"
        }
      ]
    },
    {
      "key": "v-4492633833bc1",
      "path": "/src/web/typescript/ts-base-types.html",
      "title": "类型",
      "headers": [
        {
          "level": 2,
          "title": "布尔类型",
          "slug": "布尔类型"
        },
        {
          "level": 2,
          "title": "数值",
          "slug": "数值"
        },
        {
          "level": 2,
          "title": "字符串",
          "slug": "字符串"
        },
        {
          "level": 2,
          "title": "Null 和 Undefined",
          "slug": "null-和-undefined"
        },
        {
          "level": 2,
          "title": "数组",
          "slug": "数组"
        },
        {
          "level": 3,
          "title": "最简单的方法是使用「类型 + 方括号」来表示数组：",
          "slug": "最简单的方法是使用「类型-方括号」来表示数组："
        },
        {
          "level": 3,
          "title": "也可以使用数组泛型Array<elemType> 来表示数组:",
          "slug": "也可以使用数组泛型array-elemtype-来表示数组"
        },
        {
          "level": 3,
          "title": "用接口表示数组",
          "slug": "用接口表示数组"
        },
        {
          "level": 3,
          "title": "类数组!",
          "slug": "类数组"
        },
        {
          "level": 2,
          "title": "对象",
          "slug": "对象"
        },
        {
          "level": 2,
          "title": "任意类型",
          "slug": "任意类型"
        },
        {
          "level": 2,
          "title": "联合类型",
          "slug": "联合类型"
        },
        {
          "level": 3,
          "title": "基本用法",
          "slug": "基本用法"
        },
        {
          "level": 3,
          "title": "访问联合类型的属性或方法",
          "slug": "访问联合类型的属性或方法"
        },
        {
          "level": 3,
          "title": "字符串字面量类型",
          "slug": "字符串字面量类型"
        },
        {
          "level": 2,
          "title": "类型推论",
          "slug": "类型推论"
        },
        {
          "level": 3,
          "title": "什么是类型推论",
          "slug": "什么是类型推论"
        },
        {
          "level": 2,
          "title": "类型断言",
          "slug": "类型断言"
        },
        {
          "level": 3,
          "title": "语法",
          "slug": "语法"
        },
        {
          "level": 3,
          "title": "例子：将一个联合类型的变量指定为一个更加具体的类型",
          "slug": "例子：将一个联合类型的变量指定为一个更加具体的类型"
        },
        {
          "level": 2,
          "title": "函数的类型",
          "slug": "函数的类型"
        },
        {
          "level": 3,
          "title": "函数声明",
          "slug": "函数声明"
        },
        {
          "level": 3,
          "title": "函数表达式",
          "slug": "函数表达式"
        },
        {
          "level": 3,
          "title": "用接口定义函数的形状",
          "slug": "用接口定义函数的形状"
        },
        {
          "level": 3,
          "title": "可选参数",
          "slug": "可选参数"
        },
        {
          "level": 3,
          "title": "剩余参数",
          "slug": "剩余参数"
        },
        {
          "level": 3,
          "title": "重载",
          "slug": "重载"
        },
        {
          "level": 2,
          "title": "类型别名",
          "slug": "类型别名"
        }
      ]
    },
    {
      "key": "v-15ec96fdaf1",
      "path": "/src/web/typescript/ts-interface-types.html",
      "title": "接口",
      "headers": [
        {
          "level": 2,
          "title": "对象接口定义",
          "slug": "对象接口定义"
        },
        {
          "level": 2,
          "title": "什么是接口",
          "slug": "什么是接口"
        },
        {
          "level": 2,
          "title": "可选属性",
          "slug": "可选属性"
        },
        {
          "level": 2,
          "title": "任意属性",
          "slug": "任意属性"
        },
        {
          "level": 2,
          "title": "只读属性",
          "slug": "只读属性"
        },
        {
          "level": 2,
          "title": "类与接口定义",
          "slug": "类与接口定义"
        },
        {
          "level": 2,
          "title": "接口继承接口",
          "slug": "接口继承接口"
        },
        {
          "level": 2,
          "title": "接口继承类",
          "slug": "接口继承类"
        },
        {
          "level": 2,
          "title": "混合类型",
          "slug": "混合类型"
        }
      ]
    },
    {
      "key": "v-77f6464d11366",
      "path": "/src/web/typescript/ts-introduce.html",
      "title": "简介",
      "headers": [
        {
          "level": 2,
          "title": "什么是 TypeScript",
          "slug": "什么是-typescript"
        },
        {
          "level": 2,
          "title": "为什么选择 TypeScript",
          "slug": "为什么选择-typescript"
        },
        {
          "level": 3,
          "title": "TypeScript 增加了代码的可读性和可维护性",
          "slug": "typescript-增加了代码的可读性和可维护性"
        },
        {
          "level": 3,
          "title": "TypeScript 非常包容",
          "slug": "typescript-非常包容"
        },
        {
          "level": 2,
          "title": "TypeScript 的缺点",
          "slug": "typescript-的缺点"
        }
      ]
    },
    {
      "key": "v-4bd3d2539267e",
      "path": "/src/web/vue/vuex.html",
      "title": "vuex",
      "headers": [
        {
          "level": 2,
          "title": "vuex 是什么",
          "slug": "vuex-是什么"
        },
        {
          "level": 3,
          "title": "什么是“状态管理模式”？",
          "slug": "什么是“状态管理模式”？"
        },
        {
          "level": 2,
          "title": "为什么使用 vuex",
          "slug": "为什么使用-vuex"
        },
        {
          "level": 2,
          "title": "VUEX 流程",
          "slug": "vuex-流程"
        },
        {
          "level": 2,
          "title": "VUEX 核心概念",
          "slug": "vuex-核心概念"
        },
        {
          "level": 3,
          "title": "State",
          "slug": "state"
        },
        {
          "level": 3,
          "title": "Action",
          "slug": "action"
        },
        {
          "level": 3,
          "title": "Mutation",
          "slug": "mutation"
        },
        {
          "level": 3,
          "title": "Getter",
          "slug": "getter"
        },
        {
          "level": 2,
          "title": "插件",
          "slug": "插件"
        },
        {
          "level": 3,
          "title": "在插件内提交 Mutation",
          "slug": "在插件内提交-mutation"
        },
        {
          "level": 3,
          "title": "内置 Logger 插件",
          "slug": "内置-logger-插件"
        }
      ]
    }
  ],
  "themeConfig": {
    "repo": "https://github.com/xcj189323200/docs",
    "docsDir": "docs",
    "docsBranch": "master",
    "nav": [
      {
        "text": "前端",
        "items": [
          {
            "text": "vue",
            "link": "/src/web/vue/vuex"
          },
          {
            "text": "typescript",
            "link": "/src/web/typescript/ts-base-types"
          }
        ]
      },
      {
        "text": "后端",
        "items": [
          {
            "text": "node",
            "link": "/src/web/node/express"
          }
        ]
      },
      {
        "text": "规范",
        "link": "/src/rules/rules"
      },
      {
        "text": "关于我",
        "link": "/src/html/about"
      }
    ],
    "sidebar": {
      "/src/web/typescript/": [
        {
          "title": "typeScript",
          "collapsable": true,
          "children": [
            "/src/web/typescript/ts-introduce",
            "/src/web/typescript/ts-base-types",
            "/src/web/typescript/ts-interface-types"
          ]
        }
      ],
      "/src/web/vue/": [
        {
          "title": "vue",
          "collapsable": true,
          "children": [
            "/src/web/vue/vuex"
          ]
        }
      ],
      "/src/web/node/": [
        {
          "title": "NODE",
          "collapsable": true,
          "children": [
            "/src/web/node/express"
          ]
        }
      ]
    }
  }
}