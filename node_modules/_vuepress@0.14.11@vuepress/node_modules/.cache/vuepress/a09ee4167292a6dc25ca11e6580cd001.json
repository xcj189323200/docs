{"remainingRequest":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xuchangjian/workspace/my/pc/docs/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xuchangjian/workspace/my/pc/docs/src/rules/rules.md?vue&type=template&id=2dc17207&","dependencies":[{"path":"/Users/xuchangjian/workspace/my/pc/docs/src/rules/rules.md","mtime":1559213892796},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"声明：\" } }, [_vm._v(\"声明：\")]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"该协议的前提是将一切可以通过http进行传输的内容当做是信息资源，协议是针对这些具备资源性质（实际上，任何提供http请求的服务都可以抽象成资源，或者与资源相关的内容）的API的约束\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h1\", { attrs: { id: \"一、基本约定\" } }, [_vm._v(\"一、基本约定\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"URL地址采用小写形式，禁止使用驼峰形式的路径\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [\n            _vm._v(\n              '非参数部分的URL地址中的分隔符采用连接号：\"-\"，禁止使用下划线：\"_\"'\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v('参数名称一致采用\"_\"下划线分割的形式')])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"strong\", [_vm._v(\"路径或参数名称避免出现中文字样\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h1\", { attrs: { id: \"二、url的组成\" } }, [_vm._v(\"二、URL的组成\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"URL（不含参数部分）的基本组成如下：\")]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"http://{domain}/{namespace}/{version}/{resoure}\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_2-1-域名（domain）\" } }, [\n        _vm._v(\"2.1 域名（domain）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"API中心\")]),\n        _vm._v(\" 统一采用：\"),\n        _c(\"code\", [_vm._v(\"http://api-bigdata.huan.tv/\")]),\n        _vm._v(\"作为域名\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_2-2-项目名（namespace）\" } }, [\n        _vm._v(\"2.2 项目名（namespace）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"默认情况下，\"),\n        _c(\"code\", [_vm._v(\"API中心\")]),\n        _vm._v(\"接口按照项目进行分类，名称由\"),\n        _c(\"code\", [_vm._v(\"主题项目名称\")]),\n        _vm._v(\" + \"),\n        _c(\"code\", [_vm._v(\"-api\")]),\n        _vm._v(\"两部分组成\\n\"),\n        _c(\"em\", [_vm._v(\"示例：\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nhttp://api-bigdata.huan.tv/example-api    示例项目接口\\nhttp://api-bigdata.huan.tv/csm-huan-api    实时收视项目接口\\nhttp://api-bigdata.huan.tv/tv-zone-api    电视社区项目接口\\nhttp://api-bigdata.huan.tv/group-insight-api    睛准洞察接口\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"_2-3-版本（version）\" } }, [\n        _vm._v(\"2.3 版本（version）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"使用 v{n} 对\"),\n        _c(\"code\", [_vm._v(\"API接口\")]),\n        _vm._v(\"进行版本管理，其中 n 为\"),\n        _c(\"code\", [_vm._v(\"大于0\")]),\n        _vm._v(\"的\"),\n        _c(\"code\", [_vm._v(\"整数\")]),\n        _vm._v(\n          \"值；接口调整时,若仅仅是为资源添加某些属性，且能够兼容之前接口的数据，则不必调整接口版本（即：禁止出现小版本，如1.1,2.3等版本号，但需要注意及时更新接口文档）\\n\"\n        ),\n        _c(\"em\", [_vm._v(\"示例：\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\n/example-api/v1\\n/csm-huan-api/v2\\n/tv-zone-api/v1\\n# 错误示例\\n/example-api/v1.4\\n/csm-huan-api/v2.3.7\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"_2-4-资源（resource）\" } }, [\n        _vm._v(\"2.4 资源（resource）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"资源是对作用对象的一种描述，主要可以分为以下三种类型：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"数据\\n可以通过\"),\n          _c(\"code\", [_vm._v(\"IO流\")]),\n          _vm._v(\n            \"在网络进行传输，而且可以持久化到计算机中的内容(如：文档，图片，特定的数据等)\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/tv-zone-api/v1/reach    电视社区终端到达信息\\nGET->/csm-huan-api/v1/ratings    实时收视率信息\\nGET->/insight-api/v1/interests    睛准洞察的兴趣偏好信息【宽泛的资源定义，可以包含多个指标】\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"状态\\n对事情完成程度或事物所处形态的描述信息\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/csm-huan-api/v1/ivc-load-status/20181010    加权加载的状态[prepare,loaded]【查看性质的状态】\\nPUT->/example-api/page-open-status?closed=true    关闭页面，禁止对外开放【更改性质的状态】\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"动作（操作）\\n使用者（一般指使用系统的人）对现有资源采取的行为\\n**提示：**一般采用动作作用的对象作为资源名词，如果作用对象是系统或系统外的资源，可以直接省略资源名字\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nDELETE->/insight-api/v1/users/123    删除[用户]\\nPOST->/example-api/v1/login    登录[系统]\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"**提示：**协议使用者应该根据自己的业务场景，确认业务所使用的数据，将其抽象成为以上三种资源中的一种或几种资源，进而进行接口开发\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h1\", { attrs: { id: \"三、url-规范\" } }, [_vm._v(\"三、URL 规范\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_3-1-url约束（不含参数部分）\" } }, [\n        _vm._v(\"3.1 URL约束（不含参数部分）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"资源导向\")]),\n          _vm._v(\n            \"\\n每个URL都是对某个或某些资源的描述，因此URL中必须是名词性的词语，且必须为名词性复数形式\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/users    获取用户列表\\nGET->/example-api/v1/channels    获取频道列表\\nGET->/tv-zone-api/v1/reach    电视社区终端到达信息\\nGET->/csm-huan-api/v1/ratings    实时收视率信息\\nGET->/example-api/v1/ratings/20181010    获取2018年10月10日的收视率信息\\nGET->/insight-api/v1/interests    睛准洞察的兴趣偏好信息【宽泛的资源定义，可以包含多个指标】\\n# 错误示例\\n× GET->/example-api/v1/programs/showed    其中 showed 属于非名词性资源,因此可以使用查询参数进行限定\\n√ GET->/example-api/v1/programs?showed=true\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"（资源）范围递减\")]),\n          _vm._v(\n            \"\\nURL中的资源需要按照从整体到局部的方式递进，即资源由较大范围向较小范围过渡，形成包含关系。\"\n          ),\n          _c(\"strong\", [_vm._v(\"建议最多有一层递进关系\")]),\n          _vm._v(\"。\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/csm-huan/v1/channels/35city    获取35城样本对应的所有频道\\n# 不推荐示例\\nGET->/csm-huan/v1/audiences/52city/20181010    获取2018年10月10日52城的收视率信息\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"（资源）由一般到特殊\")]),\n          _vm._v(\n            \"\\n访问某个资源时，要么访问整个资源列表，要么访问具体的某个特定资源\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/channels/    获取所有的频道列表\\nGET->/example-api/v1/channels/cctv1    获取 channel_code 为 cctv1 的频道信息\\nGET->/example-api/v1/reach/20181010    获取2018年10月10日的终端到达信息\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"减少资源嵌套关系\")]),\n          _vm._v(\n            \"\\nURL路径最多出现两层嵌套资源（/example-api/v1/collection/id/collection/id），\"\n          ),\n          _c(\"strong\", [_vm._v(\"推荐使用不嵌套资源的方式\")]),\n          _vm._v(\"，即：/example-api/v1/collection/id\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/channels/cctv1/programs    获取cctv1频道的节目信息\\nGET->/example-api/v1/channels/cctv1/reach/20181010    获取cctv1频道2018年10月10日的终端到达信息\\n# 推荐示例\\nGET->/example-api/v1/programs?channel_code=cctv1    获取cctv1频道的节目信息\\nGET->/example-api/v1/reach/20181010?channel_code=cctv1    获取cctv1频道2018年10月10日的终端到达信息\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"ID或时间限定资源\")]),\n          _vm._v(\n            \"\\nURL中两种资源限定方式：ID性质和时间性质(时间格式为采用：YYYYMMDDHHmmss，不含任何分隔符的形式)\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/channels/antv    获取channel_code是antv的频道信息\\nGET->/example-api/v1/reach/20181010    获取2018年10月10日的终端到达信息\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"_3-2-参数规范\" } }, [_vm._v(\"3.2 参数规范\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"参数用来筛选和精确定位资源信息，当采用URL的基本规范无法正确锁定资源时，可以将限制性的操作放置到参数中\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"记录数\")]),\n          _vm._v(\"\\n当一个资源集合记录数\"),\n          _c(\"code\", [_vm._v(\"大于200\")]),\n          _vm._v(\"时，推荐添加\"),\n          _c(\"code\", [_vm._v(\"limit\")]),\n          _vm._v(\"参数，以限制结果集的记录条数\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/programs/20181010?limit=50    获取2018年10月10日所有频道的节目单信息中的前50个\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"分页查询\")]),\n          _vm._v(\"\\n当一个资源集合记录数\"),\n          _c(\"code\", [_vm._v(\"大于200\")]),\n          _vm._v(\"时，推荐添加\"),\n          _c(\"code\", [_vm._v(\"page\")]),\n          _vm._v(\"和\"),\n          _c(\"code\", [_vm._v(\"page_size\")]),\n          _vm._v(\"两个参数,实现\"),\n          _c(\"code\", [_vm._v(\"分页查询\")]),\n          _vm._v(\"功能，以避免一次性加载大量数据导致响应过慢\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/programs/20181010?page=2&page_size=25    获取2018年10月10日第2页（每页25条记录）的节目数据\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"TOP查询\")]),\n          _vm._v(\"\\n当判断一个资源有可能需要排序时，推荐添加\"),\n          _c(\"code\", [_vm._v(\"sort\")]),\n          _vm._v(\"和\"),\n          _c(\"code\", [_vm._v(\"order\")]),\n          _vm._v(\"两个参数，提供\"),\n          _c(\"code\", [_vm._v(\"排序\")]),\n          _vm._v(\"和\"),\n          _c(\"code\", [_vm._v(\"排序方式\")]),\n          _vm._v(\n            \"的支持，当排序字段大于1时，可以用逗号“,”进行分隔，如果多个排序字段排序方式相同order可以只写1个，否则按照排序字段依次对应，并以逗号“,”分隔；当资源有可能取\"\n          ),\n          _c(\"code\", [_vm._v(\"TOP\")]),\n          _vm._v(\"时，推荐添加\"),\n          _c(\"code\", [_vm._v(\"top\")]),\n          _vm._v(\"参数，提供\"),\n          _c(\"code\", [_vm._v(\"TopN\")]),\n          _vm._v(\"功能\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/example-api/v1/programs/20181010?sort=channelName&order=asc    获取2018年10月10日的节目信息，并按照频道名称正序输出\\nGET->/example-api/v1/programs/20181010?sort=channelName,programName&order=asc    获取2018年10月10日的节目信息，并按照频道名称节目名称正序输出\\nGET->/example-api/v1/programs/20181010?sort=channelName,programName&order=asc,desc    获取2018年10月10日的节目信息，并按照频道名称正序,节目名称倒叙输出\\nGET->/example-api/v1/programs/20181010?sort=channelName,programName&order=asc&top=50 获取2018年10月10日的节目信息，并按照频道名称节目名称正序输出前50个\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"其他过滤\")]),\n          _vm._v(\"\\n除ID和时间限定资源外，还可以添加其他限制性的参数\\n示例：\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"# 正确示例\\nGET->/data-summary-api/v1/boots/20181010?scene=ub    获取2018年10月10日UB场景数据对应的开机信息\\nGET->/csm-huan-api/v1/channels?channel_type=cctv    获取所有央视频道信息\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"_3-3-项目根路径规范\" } }, [\n        _vm._v(\"3.3 项目根路径规范\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"超媒体驱动(通俗解释)\")]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"通过引入业务的相关链接进行广告的一种方式。通过超媒体链接，你可以告诉用户接下来他（她）该怎么操作（网上下单：选商品->加购物车->结算-推荐附属商品），也可以告诉用户你想让他了解哪方面的业务信息。【概括：用户想知道什么和你想让用户知道什么】\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"API中心\")]),\n        _vm._v(\n          \" 接口协议按照项目进行分类划分，因此项目级别的路径被视为根路径。当客户端请求根路径时，会返回该项目中常用的接口服务，形成超媒体驱动。比如，使用者可以将自己的项目按照不同的业务线进行规划，然后将业务的起点接口（一般指 top 级别的资源列表接口）列举出来归入根路径接口列表中，让用户可以通过\"\n        ),\n        _c(\"code\", [_vm._v(\"超媒体链接\")]),\n        _vm._v(\n          \"逐步深入业务逻辑，获取用户想要的信息或者系统想要让用户知道的信息。\\n\"\n        ),\n        _c(\"em\", [_vm._v(\"请求示例：\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"GET->http://api-badata.huan.tv/example-api\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"响应示例：\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"users_url\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"http://api‐bigdata.huan.tv/example-api/v1/users\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"  # key 为资源名称复数 + ‘_url’ 组成\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"programs_url\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"http://api‐bigdata.huan.tv/example-api/v1/programs\"')\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"_3-4-请求方法规范\" } }, [\n        _vm._v(\"3.4 请求方法规范\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"strong\", [_vm._v(\"GET\")]), _vm._v(\"\\n获取某个资源信息\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\"获取某个特定资源\\n\"),\n              _c(\"em\", [_vm._v(\"请求示例：\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"GET->http://api-bigdata.huan.tv/example-api/v2/users/123\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [_c(\"code\", [_vm._v(\"*响应结果：*\\n\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 非\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"2\")\n            ]),\n            _vm._v(\"xx的code表示请求响应正常\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"sucess\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # message表示请求结果的状态或提示性信息\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"data\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"users\"')\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"123\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"name\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Merry\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"address\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"北京市朝阳区劲松\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"email\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"merry@126.com\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"mobile\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"13388888888\"')\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\"请求某个集合资源\\n\"),\n              _c(\"em\", [_vm._v(\"请求示例：\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"GET->http://api-bigdata.huan.tv/example-api/v2/users\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [_c(\"code\", [_vm._v(\"*响应结果：*\\n\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 非\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"2\")\n            ]),\n            _vm._v(\"xx的code表示请求响应正常\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"sucess\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # message表示请求结果的状态\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"data\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"users\"')\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"123\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"name\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Merry\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"address\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"北京市朝阳区劲松\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"email\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"merry@126.com\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"mobile\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"13388888888\"')\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"，\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"users\"')\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"234\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"name\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Jhon\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"address\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"北京市朝阳区劲松\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"email\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"jhon@126.com\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"mobile\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"13388888888\"')\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        ......\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"props\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"total\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"239\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"cur_page\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"2\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"description\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"There are many users will disable in a fews days.\"')\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"POST\")]),\n          _vm._v(\"\\n新建一个资源\\n\"),\n          _c(\"em\", [_vm._v(\"请求示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"POST->http://api-bigdata.huan.tv/example-api/v1/users\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [_c(\"code\", [_vm._v(\"*响应结果：*\\n\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"201\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"created\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"location\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"http://api-bigdata.huan.tv/example-api/v1/users/345\"')\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"PUT\")]),\n          _vm._v(\"\\n更新已有资源\\n\"),\n          _c(\"em\", [_vm._v(\"请求示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"PUT->http://api-bigdata.huan.tv/example-api/v1/users/123\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [_c(\"code\", [_vm._v(\"*响应结果：*\\n\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 非\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"2\")\n            ]),\n            _vm._v(\"xx的code表示请求响应正常\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"updated\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # message表示请求结果的状态\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"更新完成\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"data\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"users\"')\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"123\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"name\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Merry\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"address\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"北京市朝阳区劲松\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"email\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"merry@126.com\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"mobile\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"13366666666\"')\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"DELETE\")]),\n          _vm._v(\"\\n删除一个已有资源\\n\"),\n          _c(\"em\", [_vm._v(\"请求示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"DELETE->http://api-bigdata.huan.tv/example-api/v1/users/123\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [_c(\"code\", [_vm._v(\"*响应结果：*\\n\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"204\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 非\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"2\")\n            ]),\n            _vm._v(\"xx的code表示请求响应正常\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"no content\"')\n            ]),\n            _vm._v(\"    # message表示请求结果的状态\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"删除成功\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"ERROR\")]),\n          _vm._v(\"\\n代码抛异常，需要主动捕获，禁止暴露错误页面给用户\\n\"),\n          _c(\"em\", [_vm._v(\"响应结果：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"500\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"server error\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"props\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"developer\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"张三丰\"')\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h1\", { attrs: { id: \"四、媒体类型\" } }, [_vm._v(\"四、媒体类型\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"响应数据时，Content-Type（即媒体类型）统一使用：\"),\n        _c(\"code\", [_vm._v(\"application/json;charset=UTF-8\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h1\", { attrs: { id: \"五、响应结果\" } }, [_vm._v(\"五、响应结果\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"标准响应格式需要包含以下元素：\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"code\")]),\n          _vm._v(\n            \"【必须元素】\\n响应码，int 类型。它用来描述请求结果的响应状态,详见附录：\"\n          ),\n          _c(\"a\", { attrs: { href: \"#%E9%99%84%E5%BD%95\" } }, [\n            _vm._v(\"响应码列表\")\n          ]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"示例：\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    ...\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"message\")]),\n          _vm._v(\n            \"【必须元素】\\n提示信息，string 类型。它用来描述请求后的提示性信息。数据正常响应时，给出成功提示，如果没有特殊提示，建议使用\"\n          ),\n          _c(\"code\", [_vm._v(\"sucess\")]),\n          _vm._v(\"；数据异常时，该字段需要携带具体的错误原因。\\n\"),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _vm._v(\"# 数据正常响应\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"success\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    ...\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n# 数据不存在\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"code\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"404\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"message\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"No data!\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    ...\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"data\")]),\n          _vm._v(\n            \"【查询请求必须元素】\\n结果集，object 或 array 类型。用来封装用户请求的数据集结果。必须为结果集中的每个资源添加 \"\n          ),\n          _c(\"code\", [_vm._v(\"resource\")]),\n          _vm._v(\n            \" 元素，以表明结果数据属于哪类资源，该元素值与URL路径的资源名词（复数）相一致。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\n                \"单个资源\\n对应 object 类型。当请求访问的是具有 ID 性质的资源，具备幂等性时，响应的结果往往是一个确定的数据，此时结果集采用 object 表示。\\n\"\n              ),\n              _c(\"em\", [_vm._v(\"示例：\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _vm._v(\"    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        ...\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"data\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"programs\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 资源必须需要添加resource`元素\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"niisinr5cci6ikpxvcj9\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"programName\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"天龙八部\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"startTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 20:00:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" # 时间响应统一采用格式：YYYY-MM-DD HH\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\"mm\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\"ss\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"endTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 20:47:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            ...\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        ...\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\n                \"集合资源\\n对应 array 类型。当请求的数据集可能存在大于1的情况时，结果集采用 array 表示。\\n\"\n              ),\n              _c(\"em\", [_vm._v(\"示例：\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    ...\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"data\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"programs\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 资源必须需要添加resource`元素\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"niisinr5cci6ikpxvcj9\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"programName\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"天龙八部 12\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"startTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 20:00:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"endTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 20:47:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            ...\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"resource\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"programs\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"    # 资源必须需要添加resource`元素\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"id\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"qaisi83kspqcmda120\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"programName\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"天龙八部 13\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"startTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 20:55:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"endTime\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"2018-10-10 21:41:00\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            ...\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        ...\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    ...\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"props\")]),\n          _vm._v(\n            \"（附加属性数据）【非必须元素】\\n当请求结果中需要额外添加说明，或者结果集中存在需要补充的数据时，推荐添加至该元素中\\n\"\n          ),\n          _c(\"em\", [_vm._v(\"示例：\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    ...\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"props\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"total_count\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"921\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"month_avg_reach\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"201801\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"28161\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"201802\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n              _vm._v(\"17985\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            ...\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        ...\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h1\", { attrs: { id: \"六、请求认证\" } }, [_vm._v(\"六、请求认证\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"接口认证由网关统一进行控制，请参考 \"),\n        _c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"API 接口网关使用规范\")]),\n        _vm._v(\"（进行中）。 在此之前，需要由各个项目自行添加 \"),\n        _c(\"code\", [_vm._v(\"token\")]),\n        _vm._v(\" 进行安全认证\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h1\", { attrs: { id: \"附录\" } }, [_vm._v(\"附录\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"响应状态码\")])]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"状态码\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"（推荐）响应消息\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"描述\")\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"200\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [_vm._v(\"OK\")]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"查询，更新等操作成功\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"201\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Created\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"创建资源成功\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"204\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"No Content\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"删除资源成功\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"400\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Bad Request\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"请求参数异常\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"401\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Unauthorized\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"未认证\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"402\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Payment Required\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"待付费\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"404\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Not Found\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"未找到数据\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"500\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"Server Error\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n              _vm._v(\"服务异常\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}