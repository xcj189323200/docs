{"remainingRequest":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/xuchangjian/workspace/my/pc/docs/src/web/typescript/ts-introduce.1.md?vue&type=template&id=5be70a83&","dependencies":[{"path":"/Users/xuchangjian/workspace/my/pc/docs/src/web/typescript/ts-introduce.1.md","mtime":1559632271021},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuchangjian/workspace/my/pc/docs/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"typescript\">TypeScript</h1>\n<h2 id=\"什么是-typescript\">什么是 TypeScript</h2>\n<p>TypeScript 是 JavaScript 的一个超集，主要提供了类型系统和对 ES6 的支持，</p>\n<p>引用官网的定义</p>\n<blockquote>\n<p>TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS. Open source.</p>\n</blockquote>\n<p>翻译成中文即是：</p>\n<blockquote>\n<p>TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器和任何系统上。TypeScript 是开源的。</p>\n</blockquote>\n<h2 id=\"为什么选择-typescript\">为什么选择 TypeScript</h2>\n<h3 id=\"typescript-增加了代码的可读性和可维护性\">TypeScript 增加了代码的可读性和可维护性</h3>\n<ul>\n<li>类型系统实际上是最好的文档，大部分的函数看看类型的定义就可以知道如何使用了</li>\n<li>可以在编译阶段就发现大部分错误，这总比在运行时候出错好</li>\n<li>增强了编辑器和 IDE 的功能，包括代码补全、接口提示、跳转到定义、重构等</li>\n</ul>\n<h3 id=\"typescript-非常包容\">TypeScript 非常包容</h3>\n<ul>\n<li>TypeScript 是 JavaScript 的超集，.js 文件可以直接重命名为 .ts 即可</li>\n<li>即使不显式的定义类型，也能够自动做出类型推论</li>\n<li>可以定义从简单到复杂的几乎一切类型</li>\n<li>即使 TypeScript 编译报错，也可以生成 JavaScript 文件</li>\n<li>兼容第三方库，即使第三方库不是用 TypeScript 写的，也可以编写单独的类型文件供 TypeScript 读取</li>\n</ul>\n<h3 id=\"typescript-的缺点\">TypeScript 的缺点</h3>\n<p>任何事物都是有两面性的，我认为 TypeScript 的弊端在于：</p>\n<ul>\n<li>有一定的学习成本，需要理解接口（Interfaces）、泛型（Generics）、类（Classes）、枚举类型（Enums）等前端工程师可能不是很熟悉的概念</li>\n<li>短期可能会增加一些开发成本，毕竟要多写一些类型的定义，不过对于一个需要长期维护的项目，TypeScript 能够减少其维护成本</li>\n<li>集成到构建流程需要一些工作量</li>\n<li>可能和一些库结合的不是很完美</li>\n</ul>\n</div>\n",null]}